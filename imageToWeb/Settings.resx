<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACWBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAwAAAAMAgGAAAAVwL5hwAABF1J
        REFUaIHVmsFLMzkYxp9MAm2F3pY9WOitpXhbFjx4FgpShAqCMFB2QY/ei/gXePVYYffQgiAoSFEEzx6E
        5Tu2tAdBUOTjuwlqoZnsoZshkyZt2s50d3+XTvNm3nkySd5k3hkSBIEIggCUUnDOAQCe54EQAiEEpE0e
        S5usq55HKYUK5zwRvyqeXoFSiiAIACC8iHosbabzdJLwyzkPG8Y5HzVAFsyLerf0i8Xtl1IaNopSCjbN
        wcfHB87Pz9Fut9HtdjEcDhcSZYIxhlKphEqlgr29PaysrAAw3wC9jARBIAghRsevr684ODhAv9+PXbSN
        QqGARqOB1dXVqXU55/YGDAYD7OzsLFW8pFAo4PLyEqlUasym9oDneaM5YKLVav0r4gGg3++j1WoZbXIO
        UEpBCIGnzn6VdrudpMapPDw8WG0yEgkholFI7Z5ut5uwRDuZTAa7u7tGm1xbZOhltpjrEm0YY6jX66hW
        q8hms4srd0DXy2SL5qFer6NWq42V//HX97kFqvz+68/GcnVlZ2oBMHnZ1qlWq8byP7/9cPYxCVMD1BvO
        OY8OoVlZ1rBR0fdWTG6mpPH/gKqTqRurReaDhjCUmZf7GdG3EszzPKdt6wwImMXaymdC1cg5ByOEJDV0
        1F6I5e7rUErhqV2y6PbXAEHM4tVFl3MOTw6hGMe/ioB5PiyEqjXJIZTYsFGPI2FUrzAnBAlGIZ1IGI2R
        RMSamGcrIcOhGhbVMompJ1zrOLPQVgLm2G77P0m4s2g97eLpYWkW3t/fdWGu6A0XcIxYY1kJ9c+sXF1d
        kVqtNnbR3375adqp6hDUGzKRsayEEMJ4UrFYtPkIxztjjPzzQCOy2ewsc0D/1es4wTm3N2BtbS2RHJAL
        mUwGJycnKJfLYzbnrESpVHK5loD7+NXt1vqfn5+4uLgw2sayErZJXKlUpssfQZDAnmdjY8NqM2Yl9Ens
        +z4KhYLr9dQe0HtFWOqZ/gMYJbZ837eKV7MSnh6WJKlUCo1Gw7URttjvukZExDcaDWNWTtdIKQUZDodi
        UggdDAZotVq25K5rlLFFqDCayeSu7/tW8ZLI+4bhcBgR8V9/LtazEtYwmgSnp6fG8sPDw5n8RHpAvmIC
        kr/7tsWx1+vN7TOprERiLCMrkSjLzEokzjKyErGj7xxiHUIvLy+4u7sDAJTLZeRyuUT8qO+fYwujj4+P
        2N/fx9fXFwAgnU7j7OwM6+vrYR2XKOTiRyUSRoH5e2F7ezuxtzqlUgnX19dGW2xZiUVi+SK+w92o6ZlY
        L5t0POEJbmGKxeLYe7xwNVYfEKZ976AK1j/GODo6QjqdDuuk02k0m010Oh30ej30ej3jpM7lcmGdTqeD
        ZrM55uf4+NjauHA3Ou2LE124+ittb29vuL29hed52NzcRD6fj/h6enrCzc0NgiAYvWFkDFtbW8jn8xF/
        z8/PuL+/B4DQj+mawISHeilKNko9Nn0io39Ko55nuilx+f0bvFHqw4cB8hYAAAAASUVORK5CYII=
</value>
  </data>
</root>